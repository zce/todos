{"version":3,"sources":["components/Header.jsx","components/Item.jsx","components/Main.jsx","components/Footer.jsx","components/Info.jsx","lib/storage.js","App.jsx","serviceWorker.js","index.jsx"],"names":["Header","props","state","value","handleChange","bind","handleKeyDown","className","placeholder","autoFocus","this","onChange","onKeyDown","e","setState","target","which","onAdd","trim","Component","Item","text","editing","handleEdit","handleSubmit","prevProps","prevState","refs","input","focus","setSelectionRange","length","classes","completed","push","join","type","checked","onToggle","onDoubleClick","onClick","onDelete","ref","onBlur","onUpdate","Main","items","id","every","i","onToggleAll","htmlFor","map","item","key","Footer","routes","path","name","activeCount","reduce","count","current","href","onFilter","onClear","Info","get","json","window","localStorage","getItem","JSON","parse","set","stringify","setItem","showFilters","getCurrentPath","location","hash","substr","includes","App","storage","loading","handleAdd","handleDelete","handleToggle","handleUpdate","handleToggleAll","handleClearCompleted","handleFilter","console","log","showItems","filter","m","Math","max","allCompleted","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7763d251.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Header extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { value: '' }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n  }\n\n  render () {\n    return (\n      <header className='header'>\n        <h1>todos</h1>\n        <input\n          className='new-todo'\n          placeholder='What needs to be done?'\n          autoFocus\n          value={this.state.value}\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyDown}\n        />\n      </header>\n    )\n  }\n\n  handleChange (e) {\n    this.setState({ value: e.target.value })\n  }\n\n  handleKeyDown (e) {\n    if (e.which === 13) {\n      this.props.onAdd(e.target.value.trim())\n      this.setState({ value: '' })\n    }\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react'\n\nclass Item extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      text: props.text,\n      editing: false\n    }\n\n    this.handleEdit = this.handleEdit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    // autofocus 2\n    if (prevState.editing || !this.state.editing) return\n    this.refs.input.focus()\n    this.refs.input.setSelectionRange(0, this.refs.input.value.length)\n  }\n\n  render () {\n    const classes = []\n    this.props.completed && classes.push('completed')\n    this.state.editing && classes.push('editing')\n\n    return (\n      <li className={classes.join(' ')}>\n        <div className='view'>\n          <input className='toggle' type='checkbox' checked={this.props.completed} onChange={this.props.onToggle} />\n          <label onDoubleClick={this.handleEdit}>{this.props.text}</label>\n          <button className='destroy' onClick={this.props.onDelete} />\n        </div>\n        <input className='edit' ref='input' value={this.state.text} onChange={this.handleChange} onBlur={this.handleSubmit} onKeyDown={this.handleKeyDown} />\n        {/* autofocus 1 */}\n        {/* {this.state.editing && <input className=\"edit\" value={this.state.text} autoFocus={true} onChange={this.handleChange} onBlur={this.handleSubmit} onKeyDown={this.handleKeyDown} />} */}\n      </li>\n    )\n  }\n\n  handleEdit () {\n    this.setState({ editing: true })\n  }\n\n  handleChange (e) {\n    this.setState({ text: e.target.value })\n  }\n\n  handleSubmit (e) {\n    const text = this.state.text.trim()\n    if (text) {\n      this.props.onUpdate(text)\n      this.setState({ text, editing: false })\n    } else {\n      this.props.onDelete()\n    }\n  }\n\n  handleKeyDown (e) {\n    if (e.which === 27) {\n      this.setState({ text: this.props.text, editing: false })\n    } else if (e.which === 13) {\n      this.handleSubmit(e)\n    }\n  }\n}\n\nexport default Item\n","import React, { Component } from 'react'\n\nimport Item from './Item'\n\nclass Main extends Component {\n  render () {\n    if (!this.props.items.length) return null\n\n    return (\n      // This section should be hidden by default and shown when there are todos\n      <section className='main'>\n        <input id='toggle-all' className='toggle-all' type='checkbox' checked={this.props.items.every(i => i.completed)} onChange={this.props.onToggleAll} />\n        <label htmlFor='toggle-all'>Mark all as complete</label>\n        <ul className='todo-list'>\n          {\n            this.props.items.map(item =>\n              <Item\n                key={item.id}\n                text={item.text}\n                completed={item.completed}\n                onDelete={() => this.props.onDelete(item.id)}\n                onToggle={() => this.props.onToggle(item.id)}\n                onUpdate={text => this.props.onUpdate(item.id, text)}\n              />\n            )\n          }\n        </ul>\n      </section>\n    )\n  }\n}\n\nexport default Main\n","import React, { Component } from 'react'\n\nclass Footer extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      routes: [\n        { path: '/', name: 'All' },\n        { path: '/active', name: 'Active' },\n        { path: '/completed', name: 'Completed' }\n      ]\n    }\n  }\n\n  render () {\n    if (!this.props.items.length) return null\n\n    const activeCount = this.props.items.reduce((count, item) => {\n      return item.completed ? count - 1 : count\n    }, this.props.items.length)\n\n    return (\n      // This footer should hidden by default and shown when there are todos\n      <footer className='footer'>\n        {/* This should be `0 items left` by default */}\n        <span className='todo-count'><strong>{activeCount}</strong> {activeCount === 1 ? 'item' : 'items'} left</span>\n        {/* Remove this if you don't implement routing */}\n        <ul className='filters'>\n          {\n            this.state.routes.map(i =>\n              <li key={i.path}>\n                <a className={i.path === this.props.current ? 'selected' : ''} href={'#' + i.path} onClick={() => this.props.onFilter(i.path)}>{i.name}</a>\n              </li>\n            )\n          }\n        </ul>\n        {\n          activeCount !== this.props.items.length &&\n            <button className='clear-completed' onClick={this.props.onClear}>Clear completed</button>\n        }\n      </footer>\n    )\n  }\n}\n\nexport default Footer\n","import React, { Component } from 'react'\n\nclass Info extends Component {\n  render () {\n    return (\n      <footer className='info'>\n        <p>Double-click to edit a todo</p>\n        {/* Remove the below line ↓ */}\n        <p>Template by <a href='http://sindresorhus.com'>Sindre Sorhus</a></p>\n        {/* Change this out with your name and url ↓ */}\n        <p>Created by <a href='https://zce.me'>zce</a></p>\n        <p>Part of <a href='http://todomvc.com'>TodoMVC</a></p>\n      </footer>\n    )\n  }\n}\n\nexport default Info\n","const get = (key) => {\n  try {\n    const json = window.localStorage.getItem(key)\n    return JSON.parse(json)\n  } catch (e) {\n    return null\n  }\n}\n\nconst set = (key, value) => {\n  const json = JSON.stringify(value)\n  window.localStorage.setItem(key, json)\n}\n\nexport default { get, set }\n","import React, { Component } from 'react'\n\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport Footer from './components/Footer'\nimport Info from './components/Info'\n\nimport storage from './lib/storage'\n\nimport './App.css'\n\nconst showFilters = {\n  '/': () => true,\n  '/active': i => !i.completed,\n  '/completed': i => i.completed\n}\n\nconst getCurrentPath = () => {\n  const current = window.location.hash.substr(1)\n  return (current && ['/active', '/completed'].includes(current)) ? current : '/'\n}\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      items: storage.get('todos') || [],\n      path: getCurrentPath(),\n      loading: true\n    }\n\n    this.handleAdd = this.handleAdd.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n    this.handleToggle = this.handleToggle.bind(this)\n    this.handleUpdate = this.handleUpdate.bind(this)\n    this.handleToggleAll = this.handleToggleAll.bind(this)\n    this.handleClearCompleted = this.handleClearCompleted.bind(this)\n    this.handleFilter = this.handleFilter.bind(this)\n  }\n\n  componentWillMount () {\n    this.setState({ loading: false })\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if (prevState.items === this.state.items) return\n    // auto save\n    console.log(this.state.items)\n    storage.set('todos', this.state.items)\n  }\n\n  render () {\n    if (this.state.loading) return null\n\n    const showItems = this.state.items.filter(showFilters[this.state.path])\n\n    return (\n      <>\n        <section className='todoapp'>\n          <Header onAdd={this.handleAdd} />\n          <Main\n            items={showItems}\n            onDelete={this.handleDelete}\n            onToggle={this.handleToggle}\n            onUpdate={this.handleUpdate}\n            onToggleAll={this.handleToggleAll}\n          />\n          <Footer\n            items={this.state.items}\n            current={this.state.path}\n            onFilter={this.handleFilter}\n            onClear={this.handleClearCompleted}\n          />\n        </section>\n        <Info />\n      </>\n    )\n  }\n\n  handleAdd (text) {\n    const id = this.state.items.reduce((m, i) => Math.max(i.id, m), -1) + 1\n    const items = [...this.state.items, { id, text, completed: false }]\n    this.setState({ items })\n  }\n\n  handleDelete (id) {\n    const items = this.state.items.filter(i => i.id !== id)\n    this.setState({ items })\n  }\n\n  handleToggle (id) {\n    const items = this.state.items.map(i => i.id === id ? { ...i, completed: !i.completed } : i)\n    this.setState({ items })\n  }\n\n  handleUpdate (id, text) {\n    const items = this.state.items.map(i => i.id === id ? { ...i, text } : i)\n    this.setState({ items })\n  }\n\n  handleToggleAll () {\n    const allCompleted = this.state.items.every(i => i.completed)\n    const items = this.state.items.map(i => ({ ...i, completed: !allCompleted }))\n    this.setState({ items })\n  }\n\n  handleClearCompleted () {\n    const items = this.state.items.filter(i => !i.completed)\n    this.setState({ items })\n  }\n\n  handleFilter (path) {\n    this.setState({ path })\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window.fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// todomvc app styles\nimport 'todomvc-app-css/index.css'\n\n// // custom styles\n// import './index.css'\n\nimport App from './App'\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}